{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\feedback-app-ts\\\\src\\\\components\\\\FeedbackList.tsx\";\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedbackList = _ref => {\n  let {\n    feedbacks,\n    handleDelete\n  } = _ref;\n\n  if (!feedbacks || !feedbacks || feedbacks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no feedback yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  } // const vals = [...feedbacks.values()];\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-list\",\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: feedbacks.map(item => /*#__PURE__*/_jsxDEV(motion.div, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }, this);\n  /*  return (<div className=\"feedback-list\">\r\n     {\r\n         \r\n           feedbacks.map((item) => (   \r\n             <FeedbackItem key={item.id} \r\n             handleDelete = {handleDelete}\r\n             text={item.text} rating={item.rating} id={item.id} />\r\n         ))\r\n     }\r\n   </div>); */\n};\n\n_c = FeedbackList;\nexport default FeedbackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackList\");","map":{"version":3,"names":["React","motion","AnimatePresence","FeedbackList","feedbacks","handleDelete","length","map","item"],"sources":["D:/reactjs/feedback-app-ts/src/components/FeedbackList.tsx"],"sourcesContent":["import React from 'react'\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\nimport { FeedbackInterface } from '../data/FeedbackData'\r\nimport { OrNull } from '../utils';\r\nimport FeedbackItem from './FeedbackItem'\r\nexport interface FeedbackListInterface {\r\n    feedbacks: Array<FeedbackInterface>, // OrNull<Map<number, FeedbackInterface>>,\r\n    handleDelete: (id : string) => void;\r\n}\r\n\r\nconst FeedbackList = ({feedbacks, handleDelete} : FeedbackListInterface) => {\r\n    if (!feedbacks || !feedbacks || feedbacks.length === 0) {\r\n    return <p>no feedback yet</p>\r\n  }\r\n  // const vals = [...feedbacks.values()];\r\n  return (<div className=\"feedback-list\">\r\n    <AnimatePresence>\r\n      {\r\n\r\n        feedbacks.map((item) => (\r\n          <motion.div>\r\n\r\n          </motion.div>\r\n          \r\n        ))\r\n      }\r\n    </AnimatePresence>\r\n    \r\n  </div>);\r\n /*  return (<div className=\"feedback-list\">\r\n    {\r\n        \r\n          feedbacks.map((item) => (   \r\n            <FeedbackItem key={item.id} \r\n            handleDelete = {handleDelete}\r\n            text={item.text} rating={item.rating} id={item.id} />\r\n        ))\r\n    }\r\n  </div>); */\r\n}\r\n\r\nexport default FeedbackList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,eAAhB,QAAsC,eAAtC;;;AASA,MAAMC,YAAY,GAAG,QAAuD;EAAA,IAAtD;IAACC,SAAD;IAAYC;EAAZ,CAAsD;;EACxE,IAAI,CAACD,SAAD,IAAc,CAACA,SAAf,IAA4BA,SAAS,CAACE,MAAV,KAAqB,CAArD,EAAwD;IACxD,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAHyE,CAI1E;;;EACA,oBAAQ;IAAK,SAAS,EAAC,eAAf;IAAA,uBACN,QAAC,eAAD;MAAA,UAGIF,SAAS,CAACG,GAAV,CAAeC,IAAD,iBACZ,QAAC,MAAD,CAAQ,GAAR;QAAA;QAAA;QAAA;MAAA,QADF;IAHJ;MAAA;MAAA;MAAA;IAAA;EADM;IAAA;IAAA;IAAA;EAAA,QAAR;EAcD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CA7BD;;KAAML,Y;AA+BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}